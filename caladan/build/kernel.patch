commit a56b879ee8d1de1df1da617b71f3c61282c3e81b
Author: Zhenyuan Ruan <zainryan95@gmail.com>
Date:   Sun May 16 18:46:08 2021 -0600

    Support newer version of kernels.

diff --git a/kernel/linux/kni/kni_dev.h b/kernel/linux/kni/kni_dev.h
index 5e75c6371..541d24eec 100644
--- a/kernel/linux/kni/kni_dev.h
+++ b/kernel/linux/kni/kni_dev.h
@@ -101,9 +101,15 @@ static inline phys_addr_t iova_to_phys(struct task_struct *tsk,
 	offset = iova & (PAGE_SIZE - 1);
 
 	/* Read one page struct info */
-	ret = get_user_pages_remote(tsk, tsk->mm, iova, 1,
+#if KERNEL_VERSION(5, 9, 0) <= LINUX_VERSION_CODE
+        ret = get_user_pages_remote(tsk->mm, iova, 1,
 				    FOLL_TOUCH, &page, NULL, NULL);
-	if (ret < 0)
+#else
+        ret = get_user_pages_remote(tsk, tsk->mm, iova, 1,
+				    FOLL_TOUCH, &page, NULL, NULL);
+#endif
+
+        if (ret < 0)
 		return 0;
 
 	phys_addr = page_to_phys(page) | offset;
diff --git a/kernel/linux/kni/kni_net.c b/kernel/linux/kni/kni_net.c
index 1ba9b1b99..c53d2974d 100644
--- a/kernel/linux/kni/kni_net.c
+++ b/kernel/linux/kni/kni_net.c
@@ -624,7 +624,11 @@ kni_net_rx(struct kni_dev *kni)
  * Deal with a transmit timeout.
  */
 static void
+#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
+kni_net_tx_timeout(struct net_device *dev, unsigned int txqueue)
+#else
 kni_net_tx_timeout(struct net_device *dev)
+#endif
 {
 	pr_debug("Transmit timeout at %ld, latency %ld\n", jiffies,
 			jiffies - dev_trans_start(dev));
diff --git a/drivers/net/ifc/base/ifcvf.h b/drivers/net/ifc/base/ifcvf.h
index 9be2770fea..7fd3f9a9f9 100644
--- a/drivers/net/ifc/base/ifcvf.h
+++ b/drivers/net/ifc/base/ifcvf.h
@@ -13,7 +13,7 @@
 #define IFCVF_SUBSYS_DEVICE_ID	0x001A
 
 #define IFCVF_MAX_QUEUES		1
-#define VIRTIO_F_IOMMU_PLATFORM		33
+//#define VIRTIO_F_IOMMU_PLATFORM		33
 
 /* Common configuration */
 #define IFCVF_PCI_CAP_COMMON_CFG	1
