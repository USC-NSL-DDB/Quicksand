#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from social_network import BackEndService
from social_network.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  void ComposePost(i64 req_id, string username, i64 user_id, string text,  media_ids,  media_types, PostType post_type)')
    print('  void StorePost(i64 req_id, Post post)')
    print('  Post ReadPost(i64 req_id, i64 post_id)')
    print('   ReadPosts(i64 req_id,  post_ids)')
    print('   ReadUserTimeline(i64 req_id, i64 user_id, i32 start, i32 stop)')
    print('  string Login(i64 req_id, string username, string password)')
    print('  void RegisterUser(i64 req_id, string first_name, string last_name, string username, string password)')
    print('  void RegisterUserWithId(i64 req_id, string first_name, string last_name, string username, string password, i64 user_id)')
    print('   GetFollowers(i64 req_id, i64 user_id)')
    print('  void Unfollow(i64 req_id, i64 user_id, i64 followee_id)')
    print('  void UnfollowWithUsername(i64 req_id, string user_usernmae, string followee_username)')
    print('  void Follow(i64 req_id, i64 user_id, i64 followee_id)')
    print('  void FollowWithUsername(i64 req_id, string user_usernmae, string followee_username)')
    print('   GetFollowees(i64 req_id, i64 user_id)')
    print('   ReadHomeTimeline(i64 req_id, i64 user_id, i32 start, i32 stop)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = BackEndService.Client(protocol)
transport.open()

if cmd == 'ComposePost':
    if len(args) != 7:
        print('ComposePost requires 7 args')
        sys.exit(1)
    pp.pprint(client.ComposePost(eval(args[0]), args[1], eval(args[2]), args[3], eval(args[4]), eval(args[5]), eval(args[6]),))

elif cmd == 'StorePost':
    if len(args) != 2:
        print('StorePost requires 2 args')
        sys.exit(1)
    pp.pprint(client.StorePost(eval(args[0]), eval(args[1]),))

elif cmd == 'ReadPost':
    if len(args) != 2:
        print('ReadPost requires 2 args')
        sys.exit(1)
    pp.pprint(client.ReadPost(eval(args[0]), eval(args[1]),))

elif cmd == 'ReadPosts':
    if len(args) != 2:
        print('ReadPosts requires 2 args')
        sys.exit(1)
    pp.pprint(client.ReadPosts(eval(args[0]), eval(args[1]),))

elif cmd == 'ReadUserTimeline':
    if len(args) != 4:
        print('ReadUserTimeline requires 4 args')
        sys.exit(1)
    pp.pprint(client.ReadUserTimeline(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'Login':
    if len(args) != 3:
        print('Login requires 3 args')
        sys.exit(1)
    pp.pprint(client.Login(eval(args[0]), args[1], args[2],))

elif cmd == 'RegisterUser':
    if len(args) != 5:
        print('RegisterUser requires 5 args')
        sys.exit(1)
    pp.pprint(client.RegisterUser(eval(args[0]), args[1], args[2], args[3], args[4],))

elif cmd == 'RegisterUserWithId':
    if len(args) != 6:
        print('RegisterUserWithId requires 6 args')
        sys.exit(1)
    pp.pprint(client.RegisterUserWithId(eval(args[0]), args[1], args[2], args[3], args[4], eval(args[5]),))

elif cmd == 'GetFollowers':
    if len(args) != 2:
        print('GetFollowers requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetFollowers(eval(args[0]), eval(args[1]),))

elif cmd == 'Unfollow':
    if len(args) != 3:
        print('Unfollow requires 3 args')
        sys.exit(1)
    pp.pprint(client.Unfollow(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'UnfollowWithUsername':
    if len(args) != 3:
        print('UnfollowWithUsername requires 3 args')
        sys.exit(1)
    pp.pprint(client.UnfollowWithUsername(eval(args[0]), args[1], args[2],))

elif cmd == 'Follow':
    if len(args) != 3:
        print('Follow requires 3 args')
        sys.exit(1)
    pp.pprint(client.Follow(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'FollowWithUsername':
    if len(args) != 3:
        print('FollowWithUsername requires 3 args')
        sys.exit(1)
    pp.pprint(client.FollowWithUsername(eval(args[0]), args[1], args[2],))

elif cmd == 'GetFollowees':
    if len(args) != 2:
        print('GetFollowees requires 2 args')
        sys.exit(1)
    pp.pprint(client.GetFollowees(eval(args[0]), eval(args[1]),))

elif cmd == 'ReadHomeTimeline':
    if len(args) != 4:
        print('ReadHomeTimeline requires 4 args')
        sys.exit(1)
    pp.pprint(client.ReadHomeTimeline(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
